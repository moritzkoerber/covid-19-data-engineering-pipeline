AWSTemplateFormatVersion: '2010-09-09'
Description: Data Engineering Pipeline Stack

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: data-pipeline-s3-bucket

  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    Properties:
      ClusterIdentifier: data-pipeline-redshift-cluster
      ClusterType: single-node
      DBName: dev
      NodeType: dc2.large
      IamRoles:
        - !GetAtt RedshiftClusterRole.Arn
      MasterUsername: appadmin
      MasterUserPassword: '{{resolve:secretsmanager:data-pipeline-redshift-cluster:SecretString:appadmin}}'

  RedshiftClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: redshift.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                Resource:
                  - !Sub '${S3Bucket.Arn}'
                  - !Sub '${S3Bucket.Arn}/*'
  APILambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/api_lambda:latest'
      ImageConfig:
        Command:
          - handler.handler_func
      Description: Lambda for covid api calls
      Timeout: 300
      PackageType: Image
      Role: !GetAtt APILambdaRole.Arn

  APILambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                Resource:
                  - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/api_lambda'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  APILambdaAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub 'Alarm if an error occurs in ${APILambda}'
      Namespace: 'AWS/Lambda'
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref APILambda
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: ignore
      Threshold: 1
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
